# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14X3kxc-L6-LHT2ECbcLH3ilUgYWOBnI0
"""

import streamlit as st
import requests
import matplotlib.pyplot as plt
import pandas as pd

# OpenWeatherMap API 키 (환경 변수 또는 Streamlit Secrets 사용 권장)
# 여기서는 예시를 위해 직접 입력하지만, 실제 배포 시에는 Secrets를 사용하세요.
# Streamlit Secrets 사용법: https://docs.streamlit.io/library/api-reference/utilities/st.secrets
# API_KEY = st.secrets["OPENWEATHERMAP_API_KEY"]
API_KEY = "21ae68a8847da4d8b312826fa582c9f1" # 실제 배포 시 이 줄을 제거하고 st.secrets를 사용하세요.

st.title("도시별 일주일 날씨 예보")

city = st.text_input("날씨를 알고 싶은 도시 이름을 입력하세요:", "Seoul")

if city:
    url = f"http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={API_KEY}&units=metric&lang=kr" # lang=kr 추가

    try:
        response = requests.get(url)
        data = response.json()

        if data["cod"] == "200":
            st.subheader(f"{city}의 일주일 날씨 예보:")

            forecast_list = data["list"]

            # 다음 7일 동안의 데이터 필터링 (매일 같은 시간대의 데이터를 사용)
            daily_forecast = []
            seen_dates = set()
            for item in forecast_list:
                date = item['dt_txt'].split(' ')[0]
                if date not in seen_dates and len(daily_forecast) < 7:
                    daily_forecast.append(item)
                    seen_dates.add(date)

            if len(daily_forecast) < 7:
                st.warning("7일치 예보 데이터를 충분히 가져오지 못했습니다.")

            dates = [pd.to_datetime(item['dt_txt']).strftime('%m/%d') for item in daily_forecast]
            temps = [item['main']['temp'] for item in daily_forecast]
            descriptions = [item['weather'][0]['description'] for item in daily_forecast]

            # 날씨 정보 표 출력
            weather_data = {'날짜': dates, '온도 (°C)': temps, '날씨': descriptions}
            df = pd.DataFrame(weather_data)
            st.dataframe(df)

            # 온도 변화 그래프 출력
            fig, ax = plt.subplots(figsize=(10, 6))
            ax.plot(dates, temps, marker='o')
            ax.set_xlabel("날짜")
            ax.set_ylabel("온도 (°C)")
            ax.set_title(f"{city} 일주일 온도 변화")
            ax.grid(True)
            st.pyplot(fig)

        else:
            st.error(f"API 호출 실패: {data.get('message', '알 수 없는 오류')}")

    except requests.exceptions.RequestException as e:
        st.error(f"API 요청 중 오류 발생: {e}")
    except Exception as e:
        st.error(f"오류 발생: {e}")

else:
    st.info("도시 이름을 입력해주세요.")
